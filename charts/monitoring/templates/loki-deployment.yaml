apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app: loki
spec:
  replicas: {{ .Values.loki.replicas | default 1 }}
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      serviceAccountName: loki-sa
      initContainers:
        - name: init-loki-config
          image: alpine:3.18
          command:
            - /bin/sh
            - -c
            - |
              set -euo pipefail
              apk add --no-cache gettext >/dev/null 2>&1 || true
              # validate required env keys passed from Secret
              MISSING=0
{{- if .Values.commonEnv.envKeys }}
{{- range $i, $key := .Values.commonEnv.envKeys }}
              if [ -z "${{ $key }:-}" ]; then
                echo "ERROR: env '{{ $key }}' is empty or missing"
                MISSING=1
              fi
{{- end }}
{{- end }}
              if [ "$MISSING" -eq 1 ]; then
                echo "One or more required env vars are missing, aborting initContainer"
                exit 2
              fi
              mkdir -p /var/loki/config
              envsubst < /etc/loki/config.yaml > /var/loki/config/config.generated.yaml
              echo "----- GENERATED LOKI CONFIG BEGIN -----"
              sed -n '1,200p' /var/loki/config/config.generated.yaml || true
              echo "----- GENERATED LOKI CONFIG END -----"
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki
              readOnly: true
            - name: loki-config-generated
              mountPath: /var/loki/config
      containers:
        - name: loki
          image: "{{ .Values.loki.image.repository }}:{{ .Values.loki.image.tag }}"
          command:
            - /usr/bin/loki
            - -config.file=/var/loki/config/config.generated.yaml
          ports:
            - containerPort: {{ .Values.service.targetPort | default 3100 }}
          env:
{{- if .Values.commonEnv.secretName }}
{{- range $i, $key := .Values.commonEnv.envKeys }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.commonEnv.secretName }}
                  key: {{ $key }}
{{- end }}
{{- end }}
          volumeMounts:
            - name: loki-config-generated
              mountPath: /var/loki/config
            - name: loki-wal
              mountPath: /var/loki/wal
            - name: loki-index
              mountPath: /var/loki/index
            - name: loki-cache
              mountPath: /var/loki/cache
      volumes:
        - name: loki-config
          configMap:
            name: {{ .Values.configMap.name | default "loki-config" }}
        - name: loki-config-generated
          emptyDir: {}
        - name: loki-wal
          emptyDir: {}
        - name: loki-index
          emptyDir: {}
        - name: loki-cache
          emptyDir: {}